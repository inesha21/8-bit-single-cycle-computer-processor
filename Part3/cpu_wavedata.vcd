$date
	Wed May 31 09:54:05 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module cpu_tb $end
$var wire 32 ! PC [31:0] $end
$var wire 32 " INSTRUCTION [31:0] $end
$var reg 1 # CLK $end
$var reg 1 $ RESET $end
$scope module mycpu $end
$var wire 1 # CLK $end
$var wire 32 % INSTRUCTION [31:0] $end
$var wire 1 $ RESET $end
$var wire 3 & WRITEREG [2:0] $end
$var wire 8 ' TWOSOUT [7:0] $end
$var wire 8 ( REGOUT2 [7:0] $end
$var wire 3 ) READREG2 [2:0] $end
$var wire 3 * READREG1 [2:0] $end
$var wire 32 + PCADDED [31:0] $end
$var wire 8 , NEGMUXOUT [7:0] $end
$var wire 8 - IMMEDIATE [7:0] $end
$var wire 8 . DATA2 [7:0] $end
$var wire 8 / DATA1 [7:0] $end
$var wire 8 0 ALURESULT [7:0] $end
$var reg 3 1 ALUOP [2:0] $end
$var reg 1 2 IMSELECT $end
$var reg 1 3 NEGSELECT $end
$var reg 8 4 OPCODE [7:0] $end
$var reg 32 5 PC [31:0] $end
$var reg 1 6 WRITEENABLE $end
$scope module cpu_alu $end
$var wire 3 7 SELECT [2:0] $end
$var wire 8 8 DATA2 [7:0] $end
$var wire 8 9 DATA1 [7:0] $end
$var wire 8 : ANS_OR [7:0] $end
$var wire 8 ; ANS_FORWARD [7:0] $end
$var wire 8 < ANS_AND [7:0] $end
$var wire 8 = ANS_ADD [7:0] $end
$var reg 8 > RESULT [7:0] $end
$scope module f1 $end
$var wire 8 ? RESULT [7:0] $end
$var wire 8 @ DATA2 [7:0] $end
$upscope $end
$scope module f2 $end
$var wire 8 A RESULT [7:0] $end
$var wire 8 B DATA2 [7:0] $end
$var wire 8 C DATA1 [7:0] $end
$upscope $end
$scope module f3 $end
$var wire 8 D RESULT [7:0] $end
$var wire 8 E DATA2 [7:0] $end
$var wire 8 F DATA1 [7:0] $end
$upscope $end
$scope module f4 $end
$var wire 8 G RESULT [7:0] $end
$var wire 8 H DATA2 [7:0] $end
$var wire 8 I DATA1 [7:0] $end
$upscope $end
$upscope $end
$scope module cpu_im_mux $end
$var wire 8 J IN2 [7:0] $end
$var wire 1 2 SELECT $end
$var wire 8 K IN1 [7:0] $end
$var reg 8 L OUT [7:0] $end
$upscope $end
$scope module cpu_neg_mux $end
$var wire 1 3 SELECT $end
$var wire 8 M IN2 [7:0] $end
$var wire 8 N IN1 [7:0] $end
$var reg 8 O OUT [7:0] $end
$upscope $end
$scope module cpu_pc_add $end
$var wire 32 P PC [31:0] $end
$var reg 32 Q PCADDED [31:0] $end
$upscope $end
$scope module cpu_reg_file $end
$var wire 1 # CLK $end
$var wire 8 R IN [7:0] $end
$var wire 3 S INADDRESS [2:0] $end
$var wire 8 T OUT1 [7:0] $end
$var wire 3 U OUT1ADDRESS [2:0] $end
$var wire 8 V OUT2 [7:0] $end
$var wire 3 W OUT2ADDRESS [2:0] $end
$var wire 1 $ RESET $end
$var wire 1 6 WRITE $end
$var integer 32 X i [31:0] $end
$upscope $end
$scope module cpu_tc $end
$var wire 8 Y IN [7:0] $end
$var wire 8 Z OUT [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx Z
bx Y
bx X
bx W
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
x6
bx 5
bx 4
x3
x2
bx 1
bx 0
bx /
bx .
bx -
bx ,
bx +
bx *
bx )
bx (
bx '
bx &
bx %
1$
0#
bx "
bx !
$end
#4
1#
#5
b1000 X
b0 !
b0 5
b0 P
0$
#6
b100 +
b100 Q
#7
b0 0
b0 >
b0 R
b0 &
b0 S
b0 *
b0 U
b101 )
b101 W
b101 .
b101 8
b101 @
b101 B
b101 E
b101 H
b101 L
b0 4
b101 -
b101 J
b101 "
b101 %
#8
bx1x1 :
bx1x1 G
b0x0x <
b0x0x D
b101 ;
b101 ?
16
03
12
b0 1
b0 7
0#
#9
b101 0
b101 >
b101 R
b0 /
b0 9
b0 C
b0 F
b0 I
b0 T
b0 (
b0 M
b0 V
b0 Y
#10
b101 :
b101 G
b0 <
b0 D
b0 ,
b0 K
b0 O
b0 '
b0 N
b0 Z
#11
b101 =
b101 A
#12
1#
#13
b100 !
b100 5
b100 P
#14
b1000 +
b1000 Q
#15
b1 &
b1 S
b1 )
b1 W
b1001 .
b1001 8
b1001 @
b1001 B
b1001 E
b1001 H
b1001 L
b1001 -
b1001 J
b101 /
b101 9
b101 C
b101 F
b101 I
b101 T
b10000000000001001 "
b10000000000001001 %
#16
b1101 :
b1101 G
b1 <
b1 D
b1001 0
b1001 >
b1001 R
b1001 ;
b1001 ?
0#
#17
b1110 =
b1110 A
#20
1#
#21
b1000 !
b1000 5
b1000 P
#22
b1100 +
b1100 Q
#23
b10 &
b10 S
b1 4
b1 .
b1 8
b1 @
b1 B
b1 E
b1 H
b1 L
b1 -
b1 J
b1001 (
b1001 M
b1001 V
b1001 Y
b1000000100000000000000001 "
b1000000100000000000000001 %
#24
b11110111 .
b11110111 8
b11110111 @
b11110111 B
b11110111 E
b11110111 H
b11110111 L
b101 :
b101 G
b11110111 ,
b11110111 K
b11110111 O
b11110111 '
b11110111 N
b11110111 Z
02
b1 0
b1 >
b1 R
b1 ;
b1 ?
0#
#25
b11110111 :
b11110111 G
b101 <
b101 D
b11110111 0
b11110111 >
b11110111 R
b11110111 ;
b11110111 ?
#26
b11111100 =
b11111100 A
#28
1#
#29
b1100 !
b1100 5
b1100 P
#30
b10000 +
b10000 Q
#31
b11 &
b11 S
b10 *
b10 U
b0 )
b0 W
b10 4
b0 -
b0 J
b10000000110000001000000000 "
b10000000110000001000000000 %
#32
b1 1
b1 7
0#
#33
b11111100 0
b11111100 >
b11111100 R
b11110111 /
b11110111 9
b11110111 C
b11110111 F
b11110111 I
b11110111 T
b101 (
b101 M
b101 V
b101 Y
#34
b11110111 <
b11110111 D
b11111011 .
b11111011 8
b11111011 @
b11111011 B
b11111011 E
b11111011 H
b11111011 L
b11111011 ,
b11111011 K
b11111011 O
b11111011 '
b11111011 N
b11111011 Z
#35
b11111111 :
b11111111 G
b11110011 <
b11110011 D
b11111011 ;
b11111011 ?
#36
b11110010 0
b11110010 >
b11110010 R
b11110010 =
b11110010 A
1#
#37
b10000 !
b10000 5
b10000 P
#38
b10100 +
b10100 Q
#39
b100 &
b100 S
b11 *
b11 U
b1 )
b1 W
b11 4
b1 -
b1 J
b11000001000000001100000001 "
b11000001000000001100000001 %
#40
b101 .
b101 8
b101 @
b101 B
b101 E
b101 H
b101 L
b101 ,
b101 K
b101 O
13
0#
#41
b11110111 :
b11110111 G
b101 <
b101 D
b101 ;
b101 ?
b11110010 /
b11110010 9
b11110010 C
b11110010 F
b11110010 I
b11110010 T
b1001 .
b1001 8
b1001 @
b1001 B
b1001 E
b1001 H
b1001 L
b1001 ,
b1001 K
b1001 O
b1001 (
b1001 M
b1001 V
b1001 Y
#42
b11110111 '
b11110111 N
b11110111 Z
b11111011 :
b11111011 G
b0 <
b0 D
b1001 ;
b1001 ?
#43
b11111011 0
b11111011 >
b11111011 R
b11111011 =
b11111011 A
#44
1#
#45
b10100 !
b10100 5
b10100 P
#46
b11000 +
b11000 Q
#47
b0 &
b0 S
b0 *
b0 U
b101 )
b101 W
b0 4
b1110101 -
b1110101 J
b1110101 "
b1110101 %
#48
b1001 0
b1001 >
b1001 R
b11110111 ,
b11110111 K
b11110111 O
b1110101 .
b1110101 8
b1110101 @
b1110101 B
b1110101 E
b1110101 H
b1110101 L
03
12
b0 1
b0 7
0#
#49
b11110111 :
b11110111 G
b1110000 <
b1110000 D
b1110101 0
b1110101 >
b1110101 R
b1110101 ;
b1110101 ?
b101 /
b101 9
b101 C
b101 F
b101 I
b101 T
b0 (
b0 M
b0 V
b0 Y
#50
b1110101 :
b1110101 G
b101 <
b101 D
b0 ,
b0 K
b0 O
b0 '
b0 N
b0 Z
#51
b1111010 =
b1111010 A
#52
1#
#53
b11000 !
b11000 5
b11000 P
#54
b11100 +
b11100 Q
#55
b1 &
b1 S
b10 )
b10 W
b10010010 .
b10010010 8
b10010010 @
b10010010 B
b10010010 E
b10010010 H
b10010010 L
b10010010 -
b10010010 J
b1110101 /
b1110101 9
b1110101 C
b1110101 F
b1110101 I
b1110101 T
b10000000010010010 "
b10000000010010010 %
#56
b11110111 :
b11110111 G
b10000 <
b10000 D
b10010010 0
b10010010 >
b10010010 R
b10010010 ;
b10010010 ?
0#
#57
b11110111 (
b11110111 M
b11110111 V
b11110111 Y
b111 =
b111 A
#58
b1001 ,
b1001 K
b1001 O
b1001 '
b1001 N
b1001 Z
#60
1#
#61
b11100 !
b11100 5
b11100 P
#62
b100000 +
b100000 Q
#63
b101 &
b101 S
b1 *
b1 U
b0 )
b0 W
b100 4
b0 .
b0 8
b0 @
b0 B
b0 E
b0 H
b0 L
b0 -
b0 J
b100000001010000000100000000 "
b100000001010000000100000000 %
#64
b1001 .
b1001 8
b1001 @
b1001 B
b1001 E
b1001 H
b1001 L
b1110101 :
b1110101 G
b0 <
b0 D
02
b10 1
b10 7
b0 0
b0 >
b0 R
b0 ;
b0 ?
0#
#65
b1111101 :
b1111101 G
b1 0
b1 >
b1 R
b1 <
b1 D
b1001 ;
b1001 ?
b10010010 /
b10010010 9
b10010010 C
b10010010 F
b10010010 I
b10010010 T
b1110101 (
b1110101 M
b1110101 V
b1110101 Y
#66
b10011011 :
b10011011 G
b0 0
b0 >
b0 R
b0 <
b0 D
b10001011 .
b10001011 8
b10001011 @
b10001011 B
b10001011 E
b10001011 H
b10001011 L
b10001011 ,
b10001011 K
b10001011 O
b10001011 '
b10001011 N
b10001011 Z
#67
b10000010 0
b10000010 >
b10000010 R
b10000010 <
b10000010 D
b10001011 ;
b10001011 ?
#68
b11101 =
b11101 A
1#
#69
b100000 !
b100000 5
b100000 P
#70
b100100 +
b100100 Q
#71
b110 &
b110 S
b101 *
b101 U
b10 )
b10 W
b101 4
b10 -
b10 J
b101000001100000010100000010 "
b101000001100000010100000010 %
#72
b11 1
b11 7
0#
#73
b10011011 0
b10011011 >
b10011011 R
b10000010 /
b10000010 9
b10000010 C
b10000010 F
b10000010 I
b10000010 T
b11110111 (
b11110111 M
b11110111 V
b11110111 Y
#74
b10001011 0
b10001011 >
b10001011 R
b10001011 :
b10001011 G
b1001 .
b1001 8
b1001 @
b1001 B
b1001 E
b1001 H
b1001 L
b1001 ,
b1001 K
b1001 O
b1001 '
b1001 N
b1001 Z
#75
b0 <
b0 D
b1001 ;
b1001 ?
#76
b10001011 =
b10001011 A
1#
#77
b100100 !
b100100 5
b100100 P
#78
b101000 +
b101000 Q
#79
bx &
bx S
bx *
bx U
bx )
bx W
bx 4
bx -
bx J
bx "
bx %
#80
0#
#81
bx /
bx 9
bx C
bx F
bx I
bx T
bx (
bx M
bx V
bx Y
#82
bx1xx1 0
bx1xx1 >
bx1xx1 R
bx1xx1 :
bx1xx1 G
b0x00x <
b0x00x D
bx .
bx 8
bx @
bx B
bx E
bx H
bx L
bx ,
bx K
bx O
bx '
bx N
bx Z
#83
bx 0
bx >
bx R
bx :
bx G
bx <
bx D
bx ;
bx ?
bx =
bx A
#84
1#
#85
b101000 !
b101000 5
b101000 P
#86
b101100 +
b101100 Q
#88
0#
#92
1#
#93
b101100 !
b101100 5
b101100 P
#94
b110000 +
b110000 Q
#96
0#
#100
1#
#101
b110000 !
b110000 5
b110000 P
#102
b110100 +
b110100 Q
#104
0#
#108
1#
#109
b110100 !
b110100 5
b110100 P
#110
b111000 +
b111000 Q
#112
0#
#116
1#
#117
b111000 !
b111000 5
b111000 P
#118
b111100 +
b111100 Q
#120
0#
#124
1#
#125
b111100 !
b111100 5
b111100 P
#126
b1000000 +
b1000000 Q
#128
0#
#132
1#
#133
b1000000 !
b1000000 5
b1000000 P
#134
b1000100 +
b1000100 Q
#136
0#
#140
1#
#141
b1000100 !
b1000100 5
b1000100 P
#142
b1001000 +
b1001000 Q
#144
0#
#148
1#
#149
b1001000 !
b1001000 5
b1001000 P
#150
b1001100 +
b1001100 Q
#152
0#
#156
1#
#157
b1001100 !
b1001100 5
b1001100 P
#158
b1010000 +
b1010000 Q
#160
0#
#164
1#
#165
b1010000 !
b1010000 5
b1010000 P
#166
b1010100 +
b1010100 Q
#168
0#
#172
1#
#173
b1010100 !
b1010100 5
b1010100 P
#174
b1011000 +
b1011000 Q
#176
0#
#180
1#
#181
b1011000 !
b1011000 5
b1011000 P
#182
b1011100 +
b1011100 Q
#184
0#
#188
1#
#189
b1011100 !
b1011100 5
b1011100 P
#190
b1100000 +
b1100000 Q
#192
0#
#196
1#
#197
b1100000 !
b1100000 5
b1100000 P
#198
b1100100 +
b1100100 Q
#200
0#
#204
1#
#205
b1100100 !
b1100100 5
b1100100 P
#206
b1101000 +
b1101000 Q
#208
0#
#212
1#
#213
b1101000 !
b1101000 5
b1101000 P
#214
b1101100 +
b1101100 Q
#216
0#
#220
1#
#221
b1101100 !
b1101100 5
b1101100 P
#222
b1110000 +
b1110000 Q
#224
0#
#228
1#
#229
b1110000 !
b1110000 5
b1110000 P
#230
b1110100 +
b1110100 Q
#232
0#
#236
1#
#237
b1110100 !
b1110100 5
b1110100 P
#238
b1111000 +
b1111000 Q
#240
0#
#244
1#
#245
b1111000 !
b1111000 5
b1111000 P
#246
b1111100 +
b1111100 Q
#248
0#
#252
1#
#253
b1111100 !
b1111100 5
b1111100 P
#254
b10000000 +
b10000000 Q
#256
0#
#260
1#
#261
b10000000 !
b10000000 5
b10000000 P
#262
b10000100 +
b10000100 Q
#264
0#
#268
1#
#269
b10000100 !
b10000100 5
b10000100 P
#270
b10001000 +
b10001000 Q
#272
0#
#276
1#
#277
b10001000 !
b10001000 5
b10001000 P
#278
b10001100 +
b10001100 Q
#280
0#
#284
1#
#285
b10001100 !
b10001100 5
b10001100 P
#286
b10010000 +
b10010000 Q
#288
0#
#292
1#
#293
b10010000 !
b10010000 5
b10010000 P
#294
b10010100 +
b10010100 Q
#296
0#
#300
1#
#301
b10010100 !
b10010100 5
b10010100 P
#302
b10011000 +
b10011000 Q
#304
0#
#305
