$date
	Wed Jun 21 11:01:42 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module cpu_tb $end
$var wire 8 ! WRITEDATA [7:0] $end
$var wire 1 " WRITE $end
$var wire 8 # READDATA [7:0] $end
$var wire 1 $ READ $end
$var wire 32 % PC [31:0] $end
$var wire 32 & INSTRUCTION [31:0] $end
$var wire 1 ' BUSYWAIT $end
$var wire 8 ( ADDRESS [7:0] $end
$var reg 1 ) CLK $end
$var reg 1 * RESET $end
$scope module cpu_dmem $end
$var wire 1 ) clock $end
$var wire 1 * reset $end
$var wire 8 + writedata [7:0] $end
$var wire 1 " write $end
$var wire 1 $ read $end
$var wire 8 , address [7:0] $end
$var reg 1 ' busywait $end
$var reg 1 - readaccess $end
$var reg 8 . readdata [7:0] $end
$var reg 1 / writeaccess $end
$var integer 32 0 i [31:0] $end
$upscope $end
$scope module mycpu $end
$var wire 8 1 ADDRESS [7:0] $end
$var wire 1 ' BUSYWAIT $end
$var wire 1 ) CLK $end
$var wire 8 2 DATA1 [7:0] $end
$var wire 8 3 DATA2 [7:0] $end
$var wire 32 4 INSTRUCTION [31:0] $end
$var wire 8 5 NEGMUXIN [7:0] $end
$var wire 8 6 READDATA [7:0] $end
$var wire 8 7 REGVAL [7:0] $end
$var wire 1 * RESET $end
$var wire 8 8 WRITEDATA [7:0] $end
$var wire 1 9 WRITE_IN_REG $end
$var wire 1 : isBEQ $end
$var wire 1 ; isJ_OR_BEQ $end
$var wire 1 < ZERO $end
$var wire 3 = WRITEREG [2:0] $end
$var wire 8 > TWOSOUT [7:0] $end
$var wire 32 ? S_EXTENDED_OFFSET [31:0] $end
$var wire 32 @ SE_OFFSET_SHIFTED [31:0] $end
$var wire 8 A REGOUT2 [7:0] $end
$var wire 8 B REGOUT1 [7:0] $end
$var wire 3 C READREG2 [2:0] $end
$var wire 3 D READREG1 [2:0] $end
$var wire 32 E PCUPDATED [31:0] $end
$var wire 32 F PCADDED_J_BEQ [31:0] $end
$var wire 32 G PCADDED [31:0] $end
$var wire 1 H OFFSET $end
$var wire 8 I NEGMUXOUT [7:0] $end
$var wire 8 J IMMUXOUT [7:0] $end
$var wire 8 K IMMEDIATE [7:0] $end
$var wire 8 L DATAMEM_TO_REG [7:0] $end
$var wire 8 M ALURESULT [7:0] $end
$var reg 3 N ALUOP [2:0] $end
$var reg 1 O BEQSELECT $end
$var reg 1 P DATA_MEM_SELECT $end
$var reg 1 Q IMSELECT $end
$var reg 1 R JUMPSELECT $end
$var reg 1 S NEGSELECT $end
$var reg 8 T OPCODE [7:0] $end
$var reg 32 U PC [31:0] $end
$var reg 1 $ READ $end
$var reg 1 " WRITE $end
$var reg 1 V WRITEENABLE $end
$scope module cpu_alu $end
$var wire 8 W DATA1 [7:0] $end
$var wire 8 X DATA2 [7:0] $end
$var wire 3 Y SELECT [2:0] $end
$var wire 8 Z ANS_OR [7:0] $end
$var wire 8 [ ANS_FORWARD [7:0] $end
$var wire 8 \ ANS_AND [7:0] $end
$var wire 8 ] ANS_ADD [7:0] $end
$var reg 8 ^ RESULT [7:0] $end
$var reg 1 < ZERO $end
$scope module f1 $end
$var wire 8 _ DATA2 [7:0] $end
$var wire 8 ` RESULT [7:0] $end
$upscope $end
$scope module f2 $end
$var wire 8 a DATA1 [7:0] $end
$var wire 8 b DATA2 [7:0] $end
$var wire 8 c RESULT [7:0] $end
$upscope $end
$scope module f3 $end
$var wire 8 d DATA1 [7:0] $end
$var wire 8 e DATA2 [7:0] $end
$var wire 8 f RESULT [7:0] $end
$upscope $end
$scope module f4 $end
$var wire 8 g DATA1 [7:0] $end
$var wire 8 h DATA2 [7:0] $end
$var wire 8 i RESULT [7:0] $end
$upscope $end
$upscope $end
$scope module cpu_im_mux $end
$var wire 8 j IN1 [7:0] $end
$var wire 8 k IN2 [7:0] $end
$var wire 1 Q SELECT $end
$var reg 8 l OUT [7:0] $end
$upscope $end
$scope module cpu_mux32 $end
$var wire 1 ; SELECT $end
$var wire 32 m IN2 [31:0] $end
$var wire 32 n IN1 [31:0] $end
$var reg 32 o OUT [31:0] $end
$upscope $end
$scope module cpu_neg_mux $end
$var wire 8 p IN1 [7:0] $end
$var wire 1 S SELECT $end
$var wire 8 q IN2 [7:0] $end
$var reg 8 r OUT [7:0] $end
$upscope $end
$scope module cpu_pc_add $end
$var wire 32 s PC [31:0] $end
$var reg 32 t PCADDED [31:0] $end
$upscope $end
$scope module cpu_pc_add_j_beq $end
$var wire 32 u INSTRUCTION [31:0] $end
$var wire 32 v PC [31:0] $end
$var wire 32 w OFFSET [31:0] $end
$var reg 32 x PCADDED [31:0] $end
$upscope $end
$scope module cpu_reg_file $end
$var wire 1 ) CLK $end
$var wire 3 y INADDRESS [2:0] $end
$var wire 8 z OUT1 [7:0] $end
$var wire 3 { OUT1ADDRESS [2:0] $end
$var wire 8 | OUT2 [7:0] $end
$var wire 3 } OUT2ADDRESS [2:0] $end
$var wire 1 * RESET $end
$var wire 1 9 WRITE $end
$var wire 8 ~ IN [7:0] $end
$var integer 32 !" i [31:0] $end
$upscope $end
$scope module cpu_shift $end
$var wire 32 "" OFFSET [31:0] $end
$var reg 32 #" SHIFTED_OFFSET [31:0] $end
$upscope $end
$scope module cpu_sign_extend $end
$var wire 8 $" IN [7:0] $end
$var reg 32 %" OUT [31:0] $end
$upscope $end
$scope module cpu_tc $end
$var wire 8 &" IN [7:0] $end
$var wire 8 '" OUT [7:0] $end
$upscope $end
$scope module data_mem_mux $end
$var wire 8 (" IN1 [7:0] $end
$var wire 8 )" IN2 [7:0] $end
$var wire 1 P SELECT $end
$var reg 8 *" OUT [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx *"
bx )"
bx ("
bx '"
bx &"
bx %"
bx $"
bx #"
bx ""
bx !"
bx ~
bx }
bx |
bx {
bx z
bx y
bx x
bx w
bx v
bx u
bx t
bx s
bx r
bx q
bx p
bx o
bx n
bx m
bx l
bx k
bx j
bx i
bx h
bx g
bx f
bx e
bx d
bx c
bx b
bx a
bx `
bx _
bx ^
bx ]
bx \
bx [
bx Z
bx Y
bx X
bx W
xV
bx U
bx T
xS
xR
xQ
xP
xO
bx N
bx M
bx L
bx K
bx J
bx I
xH
bx G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
bx =
x<
x;
x:
x9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
b100000000 0
0/
bx .
0-
bx ,
bx +
1*
0)
bx (
0'
bx &
bx %
0$
bx #
0"
bx !
$end
#4
1)
#5
b1000 !"
b0 %
b0 U
b0 s
0*
#6
b100 E
b100 o
b100 G
b100 n
b100 t
b100 v
#7
b100 @
b100 w
b100 #"
b1 ?
b1 ""
b1 %"
b1 =
b1 y
b1 $"
1H
b0 D
b0 {
b101 C
b101 }
b101 3
b101 X
b101 _
b101 b
b101 e
b101 h
b101 J
b101 l
b101 K
b101 k
b0 T
b10000000000000101 &
b10000000000000101 4
b10000000000000101 u
#8
0;
0:
19
b0x0x \
b0x0x f
bx1x1 Z
bx1x1 i
b101 [
b101 `
0P
0O
0R
1V
0S
1Q
b0 N
b0 Y
0)
#9
b101 (
b101 ,
b101 1
b101 L
b101 ~
b101 *"
b101 M
b101 ^
b101 ("
b0 2
b0 W
b0 a
b0 d
b0 g
b0 !
b0 +
b0 8
b0 B
b0 z
b0 7
b0 j
b0 I
b0 r
b0 5
b0 p
b0 A
b0 |
b0 &"
b1000 F
b1000 m
b1000 x
#10
b0 \
b0 f
b101 Z
b101 i
b0 >
b0 q
b0 '"
#11
0<
b101 ]
b101 c
#12
1)
#13
b100 %
b100 U
b100 s
#14
b1000 E
b1000 o
b1000 G
b1000 n
b1000 t
b1000 v
#15
b0 @
b0 w
b0 #"
b0 ?
b0 ""
b0 %"
b10 =
b10 y
b0 $"
0H
b1 C
b1 }
b1 3
b1 X
b1 _
b1 b
b1 e
b1 h
b1 J
b1 l
b1 K
b1 k
b100000000000000001 &
b100000000000000001 4
b100000000000000001 u
#16
b1 Z
b1 i
b1 (
b1 ,
b1 1
b1 L
b1 ~
b1 *"
b1 M
b1 ^
b1 ("
b1 [
b1 `
0)
#17
b101 7
b101 j
b101 I
b101 r
b101 5
b101 p
b101 A
b101 |
b101 &"
b1 ]
b1 c
#18
b11111011 >
b11111011 q
b11111011 '"
#20
1)
#21
b1000 %
b1000 U
b1000 s
#22
b1100 E
b1100 o
b1100 G
b1100 n
b1100 t
b1100 v
#23
b100 @
b100 w
b100 #"
b1 ?
b1 ""
b1 %"
b11 =
b11 y
b1 $"
1H
b110000000000000001 &
b110000000000000001 4
b110000000000000001 u
#24
0)
#25
b10000 F
b10000 m
b10000 x
#28
1)
#29
b1100 %
b1100 U
b1100 s
#30
b10000 E
b10000 o
b10000 G
b10000 n
b10000 t
b10000 v
#31
b0 @
b0 w
b0 #"
b0 ?
b0 ""
b0 %"
b100 =
b100 y
b0 $"
0H
b101 C
b101 }
b101 3
b101 X
b101 _
b101 b
b101 e
b101 h
b101 J
b101 l
b101 K
b101 k
b1000000000000000101 &
b1000000000000000101 4
b1000000000000000101 u
#32
b101 Z
b101 i
b101 (
b101 ,
b101 1
b101 L
b101 ~
b101 *"
b101 M
b101 ^
b101 ("
b101 [
b101 `
0)
#33
b0 7
b0 j
b0 I
b0 r
b0 5
b0 p
b0 A
b0 |
b0 &"
b101 ]
b101 c
#34
b0 >
b0 q
b0 '"
#36
1)
#37
b10000 %
b10000 U
b10000 s
#38
b10100 E
b10100 o
b10100 G
b10100 n
b10100 t
b10100 v
#39
b100 @
b100 w
b100 #"
b1 ?
b1 ""
b1 %"
b1 =
b1 y
b1 $"
1H
b1 D
b1 {
b10 C
b10 }
b10 3
b10 X
b10 _
b10 b
b10 e
b10 h
b10 J
b10 l
b10 K
b10 k
b11 T
b11000000010000000100000010 &
b11000000010000000100000010 4
b11000000010000000100000010 u
#40
b0 3
b0 X
b0 _
b0 b
b0 e
b0 h
b0 J
b0 l
b10 Z
b10 i
b101 (
b101 ,
b101 1
b101 L
b101 ~
b101 *"
b101 M
b101 ^
b101 ("
b10 [
b10 `
1S
0Q
b1 N
b1 Y
0)
#41
b0 Z
b0 i
b0 [
b0 `
b101 2
b101 W
b101 a
b101 d
b101 g
b101 !
b101 +
b101 8
b101 B
b101 z
b1 5
b1 p
b1 A
b1 |
b1 &"
b11000 F
b11000 m
b11000 x
#42
b101 Z
b101 i
b11111111 3
b11111111 X
b11111111 _
b11111111 b
b11111111 e
b11111111 h
b11111111 J
b11111111 l
b11111111 7
b11111111 j
b11111111 I
b11111111 r
b11111111 >
b11111111 q
b11111111 '"
#43
b101 \
b101 f
b11111111 Z
b11111111 i
b11111111 [
b11111111 `
#44
b100 (
b100 ,
b100 1
b100 L
b100 ~
b100 *"
b100 M
b100 ^
b100 ("
b100 ]
b100 c
1)
#45
b10100 %
b10100 U
b10100 s
#46
b11000 E
b11000 o
b11000 G
b11000 n
b11000 t
b11000 v
#47
b101 =
b101 y
b100 C
b100 }
b100 K
b100 k
b10 T
b100 2
b100 W
b100 a
b100 d
b100 g
b100 !
b100 +
b100 8
b100 B
b100 z
b10000001010000000100000100 &
b10000001010000000100000100 4
b10000001010000000100000100 u
#48
b1 3
b1 X
b1 _
b1 b
b1 e
b1 h
b1 J
b1 l
b1 7
b1 j
b1 I
b1 r
b100 \
b100 f
0S
0)
#49
b0 \
b0 f
b101 Z
b101 i
b1 [
b1 `
b101 3
b101 X
b101 _
b101 b
b101 e
b101 h
b101 J
b101 l
b101 7
b101 j
b101 I
b101 r
b101 5
b101 p
b101 A
b101 |
b101 &"
b11100 F
b11100 m
b11100 x
#50
b11111011 >
b11111011 q
b11111011 '"
b100 \
b100 f
b101 [
b101 `
#51
b1001 (
b1001 ,
b1001 1
b1001 L
b1001 ~
b1001 *"
b1001 M
b1001 ^
b1001 ("
b1001 ]
b1001 c
#52
1)
#53
b11000 %
b11000 U
b11000 s
#54
b11100 E
b11100 o
b11100 G
b11100 n
b11100 t
b11100 v
#55
b0 @
b0 w
b0 #"
b0 ?
b0 ""
b0 %"
b0 =
b0 y
b0 $"
0H
b101 D
b101 {
b1010 T
b1010000000000000010100000100 &
b1010000000000000010100000100 4
b1010000000000000010100000100 u
#56
09
1/
1'
1"
b0 N
b0 Y
0)
#57
b101 (
b101 ,
b101 1
b101 L
b101 ~
b101 *"
b101 M
b101 ^
b101 ("
b1001 2
b1001 W
b1001 a
b1001 d
b1001 g
b1001 !
b1001 +
b1001 8
b1001 B
b1001 z
#58
b1 \
b1 f
b1101 Z
b1101 i
#59
b1110 ]
b1110 c
#60
1)
#64
0)
#68
1)
#72
0)
#76
1)
#80
0)
#84
1)
#88
0)
#92
1)
#96
0)
#100
0"
19
1)
0/
0'
#101
b11100 %
b11100 U
b11100 s
#102
b100000 E
b100000 o
b100000 G
b100000 n
b100000 t
b100000 v
#103
b100 D
b100 {
b11 C
b11 }
b11 K
b11 k
b1011 T
b1011000000000000010000000011 &
b1011000000000000010000000011 4
b1011000000000000010000000011 u
#104
09
1/
1'
1"
0)
#105
b101 2
b101 W
b101 a
b101 d
b101 g
b101 !
b101 +
b101 8
b101 B
b101 z
b1 3
b1 X
b1 _
b1 b
b1 e
b1 h
b1 J
b1 l
b1 7
b1 j
b1 I
b1 r
b1 5
b1 p
b1 A
b1 |
b1 &"
b100000 F
b100000 m
b100000 x
#106
b11111111 >
b11111111 q
b11111111 '"
b101 Z
b101 i
b1 (
b1 ,
b1 1
b1 L
b1 ~
b1 *"
b1 M
b1 ^
b1 ("
b1 [
b1 `
#107
b110 ]
b110 c
#108
1)
#112
0)
#116
1)
#120
0)
#124
1)
#128
0)
#132
1)
#136
0)
#140
1)
#144
0)
#148
0"
19
1)
0/
0'
#149
b100000 %
b100000 U
b100000 s
#150
b100100 E
b100100 o
b100100 G
b100100 n
b100100 t
b100100 v
#151
b100 @
b100 w
b100 #"
b1 ?
b1 ""
b1 %"
b1 =
b1 y
b1 $"
1H
b0 D
b0 {
b100 C
b100 }
b100 K
b100 k
b1000 T
b1000000000010000000000000100 &
b1000000000010000000000000100 4
b1000000000010000000000000100 u
#152
09
bx L
bx ~
bx *"
1-
1'
1P
1$
0)
#153
b1 2
b1 W
b1 a
b1 d
b1 g
b1 !
b1 +
b1 8
b1 B
b1 z
b101 3
b101 X
b101 _
b101 b
b101 e
b101 h
b101 J
b101 l
b101 7
b101 j
b101 I
b101 r
b101 5
b101 p
b101 A
b101 |
b101 &"
b101000 F
b101000 m
b101000 x
#154
b11111011 >
b11111011 q
b11111011 '"
b101 (
b101 ,
b101 1
b101 M
b101 ^
b101 ("
b101 [
b101 `
#156
1)
#160
0)
#164
1)
#168
0)
#172
1)
#176
0)
#180
1)
#184
0)
#188
1)
#192
0)
#196
0$
19
1)
0-
0'
b1001 L
b1001 ~
b1001 *"
b1001 #
b1001 .
b1001 6
b1001 )"
#197
b100100 %
b100100 U
b100100 s
#198
b101000 E
b101000 o
b101000 G
b101000 n
b101000 t
b101000 v
#199
b0 @
b0 w
b0 #"
b0 ?
b0 ""
b0 %"
b10 =
b10 y
b0 $"
0H
b11 C
b11 }
b11 K
b11 k
b1001 T
b1001000000100000000000000011 &
b1001000000100000000000000011 4
b1001000000100000000000000011 u
#200
09
1-
1'
1$
0)
#201
b1 3
b1 X
b1 _
b1 b
b1 e
b1 h
b1 J
b1 l
b1 7
b1 j
b1 I
b1 r
b1 5
b1 p
b1 A
b1 |
b1 &"
#202
b11111111 >
b11111111 q
b11111111 '"
b1 Z
b1 i
b1 (
b1 ,
b1 1
b1 M
b1 ^
b1 ("
b1 [
b1 `
#203
b10 ]
b10 c
#204
1)
#208
0)
#212
1)
#216
0)
#220
1)
#224
0)
#228
1)
#232
0)
#236
1)
#240
0)
#244
0$
19
1)
0-
0'
b101 L
b101 ~
b101 *"
b101 #
b101 .
b101 6
b101 )"
#245
b101000 %
b101000 U
b101000 s
#246
b101100 E
b101100 o
b101100 G
b101100 n
b101100 t
b101100 v
#247
bx00 @
bx00 w
bx00 #"
bx ?
bx ""
bx %"
bx =
bx y
bx $"
xH
bx D
bx {
bx C
bx }
bx K
bx k
bx T
bx &
bx 4
bx u
#248
0)
#249
bx 2
bx W
bx a
bx d
bx g
bx !
bx +
bx 8
bx B
bx z
bx 3
bx X
bx _
bx b
bx e
bx h
bx J
bx l
bx 7
bx j
bx I
bx r
bx 5
bx p
bx A
bx |
bx &"
bx F
bx m
bx x
#250
bx >
bx q
bx '"
bx \
bx f
bx Z
bx i
bx (
bx ,
bx 1
bx M
bx ^
bx ("
bx [
bx `
#251
bx ]
bx c
#252
1)
#253
b101100 %
b101100 U
b101100 s
#254
b110000 E
b110000 o
b110000 G
b110000 n
b110000 t
b110000 v
#256
0)
#260
1)
#261
b110000 %
b110000 U
b110000 s
#262
b110100 E
b110100 o
b110100 G
b110100 n
b110100 t
b110100 v
#264
0)
#268
1)
#269
b110100 %
b110100 U
b110100 s
#270
b111000 E
b111000 o
b111000 G
b111000 n
b111000 t
b111000 v
#272
0)
#276
1)
#277
b111000 %
b111000 U
b111000 s
#278
b111100 E
b111100 o
b111100 G
b111100 n
b111100 t
b111100 v
#280
0)
#284
1)
#285
b111100 %
b111100 U
b111100 s
#286
b1000000 E
b1000000 o
b1000000 G
b1000000 n
b1000000 t
b1000000 v
#288
0)
#292
1)
#293
b1000000 %
b1000000 U
b1000000 s
#294
b1000100 E
b1000100 o
b1000100 G
b1000100 n
b1000100 t
b1000100 v
#296
0)
#300
1)
#301
b1000100 %
b1000100 U
b1000100 s
#302
b1001000 E
b1001000 o
b1001000 G
b1001000 n
b1001000 t
b1001000 v
#304
0)
#305
